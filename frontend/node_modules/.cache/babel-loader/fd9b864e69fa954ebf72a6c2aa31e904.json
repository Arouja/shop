{"ast":null,"code":"import axios from \"axios\";\nimport Axios from 'axios';\nimport { PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_REVIEW_SAVE_FAIL, PRODUCT_REVIEW_SAVE_REQUEST, PRODUCT_REVIEW_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS } from \"../constants/productConstants\";\n\nconst listProducts = function () {\n  let category = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let searchKeyword = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  let sortOrder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return async dispatch => {\n    try {\n      dispatch({\n        type: PRODUCT_LIST_REQUEST\n      });\n      const {\n        data\n      } = await axios.get('/api/products?category=' + category + '&searchKeyword=' + searchKeyword + '&sortOrder=' + sortOrder);\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload: error.message\n      });\n    }\n  };\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!product._id) {\n      const {\n        data\n      } = await Axios.post('/api/products', product, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/products/' + product._id, product, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get('/api/products/' + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteProdcut = productId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.delete('/api/products/' + productId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo: {\n          token\n        }\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_REVIEW_SAVE_REQUEST,\n      payload: review\n    });\n    const {\n      data\n    } = await axios.post(`/api/products/${productId}/reviews`, review, {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    });\n    dispatch({\n      type: PRODUCT_REVIEW_SAVE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    // report error\n    dispatch({\n      type: PRODUCT_REVIEW_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct, deleteProdcut, saveProductReview };","map":{"version":3,"names":["axios","Axios","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_REVIEW_SAVE_FAIL","PRODUCT_REVIEW_SAVE_REQUEST","PRODUCT_REVIEW_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","listProducts","category","searchKeyword","sortOrder","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","userSignin","userInfo","_id","post","headers","Authorization","token","put","detailsProduct","productId","deleteProdcut","delete","success","saveProductReview","review"],"sources":["C:/Users/DELL/Desktop/projet stage/frontend/src/actions/productActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport Axios from 'axios';\r\nimport { PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_REVIEW_SAVE_FAIL, PRODUCT_REVIEW_SAVE_REQUEST, PRODUCT_REVIEW_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS } from \"../constants/productConstants\"\r\n\r\nconst listProducts = (\r\n  category = '',\r\n  searchKeyword = '',\r\n  sortOrder = ''\r\n) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(\r\n      '/api/products?category=' +\r\n        category +\r\n        '&searchKeyword=' +\r\n        searchKeyword +\r\n        '&sortOrder=' +\r\n        sortOrder\r\n    );\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst saveProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_SAVE_REQUEST, payload: product });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    if (!product._id) {\r\n      const { data } = await Axios.post('/api/products', product, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + userInfo.token,\r\n        },\r\n      });\r\n      dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\r\n    } else {\r\n      const { data } = await Axios.put(\r\n        '/api/products/' + product._id,\r\n        product,\r\n        {\r\n          headers: {\r\n            Authorization: 'Bearer ' + userInfo.token,\r\n          },\r\n        }\r\n      );\r\n      dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_SAVE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst detailsProduct = (productId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n    const { data } = await axios.get('/api/products/' + productId);\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst deleteProdcut = (productId) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n    const { data } = await axios.delete('/api/products/' + productId, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + userInfo.token,\r\n      },\r\n    });\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS, payload: data, success: true });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst saveProductReview = (productId, review) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userSignin: {\r\n        userInfo: { token },\r\n      },\r\n    } = getState();\r\n    dispatch({ type: PRODUCT_REVIEW_SAVE_REQUEST, payload: review });\r\n    const { data } = await axios.post(\r\n      `/api/products/${productId}/reviews`,\r\n      review,\r\n      {\r\n        headers: {\r\n          Authorization: 'Bearer ' + token,\r\n        },\r\n      }\r\n    );\r\n    dispatch({ type: PRODUCT_REVIEW_SAVE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    // report error\r\n    dispatch({ type: PRODUCT_REVIEW_SAVE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\n\r\nexport {listProducts, detailsProduct, saveProduct, deleteProdcut, saveProductReview};"],"mappings":"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"},"metadata":{},"sourceType":"module"}