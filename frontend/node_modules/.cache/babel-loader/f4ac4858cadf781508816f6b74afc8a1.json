{"ast":null,"code":"import Axios from \"axios\";\nimport Cookie from 'js-cookie';\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LOGOUT, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\";\n\nconst update = _ref => {\n  let {\n    userId,\n    name,\n    email,\n    password\n  } = _ref;\n  return async (dispatch, getState) => {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n      payload: {\n        userId,\n        name,\n        email,\n        password\n      }\n    });\n\n    try {\n      const {\n        data\n      } = await Axios.put(\"/api/users/\" + userId, {\n        name,\n        email,\n        password\n      }, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: USER_UPDATE_SUCCESS,\n        payload: data\n      });\n      Cookie.set('userInfo', JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: USER_UPDATE_FAIL,\n        payload: error.message\n      });\n    }\n  };\n};\n\nconst signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst logout = () => dispatch => {\n  Cookie.remove(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\n\nexport { signin, register, logout, update };","map":{"version":3,"names":["Axios","Cookie","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LOGOUT","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","update","userId","name","email","password","dispatch","getState","userSignin","userInfo","type","payload","data","put","headers","Authorization","token","set","JSON","stringify","error","message","signin","post","register","logout","remove"],"sources":["C:/Users/DELL/Desktop/projet stage/frontend/src/actions/userActions.js"],"sourcesContent":["import Axios from \"axios\";\r\nimport Cookie from 'js-cookie';\r\nimport {\r\n  USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS,\r\n  USER_SIGNIN_FAIL, USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LOGOUT, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL\r\n} from \"../constants/userConstants\";\r\n\r\nconst update = ({ userId, name, email, password }) => async (dispatch, getState) => {\r\n  const { userSignin: { userInfo } } = getState();\r\n  dispatch({ type: USER_UPDATE_REQUEST, payload: { userId, name, email, password } });\r\n  try {\r\n    const { data } = await Axios.put(\"/api/users/\" + userId,\r\n      { name, email, password }, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + userInfo.token\r\n      }\r\n    });\r\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n    Cookie.set('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({ type: USER_UPDATE_FAIL, payload: error.message });\r\n  }\r\n}\r\n\r\nconst signin = (email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\r\n  try {\r\n    const { data } = await Axios.post(\"/api/users/signin\", { email, password });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    Cookie.set('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({ type: USER_SIGNIN_FAIL, payload: error.message });\r\n  }\r\n}\r\n\r\nconst register = (name, email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_REGISTER_REQUEST, payload: { name, email, password } });\r\n  try {\r\n    const { data } = await Axios.post(\"/api/users/register\", { name, email, password });\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n    Cookie.set('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({ type: USER_REGISTER_FAIL, payload: error.message });\r\n  }\r\n}\r\n\r\nconst logout = () => (dispatch) => {\r\n  Cookie.remove(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT })\r\n}\r\nexport { signin, register, logout, update };"],"mappings":"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"},"metadata":{},"sourceType":"module"}