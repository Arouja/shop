{"ast":null,"code":"import Axios from \"axios\";\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, MY_ORDER_LIST_REQUEST, MY_ORDER_LIST_SUCCESS, MY_ORDER_LIST_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL } from \"../constants/orderConstants\";\n\nconst createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n      payload: order\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data: {\n        data: newOrder\n      }\n    } = await Axios.post(\"/api/orders\", order, {\n      headers: {\n        Authorization: ' Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: newOrder\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MY_ORDER_LIST_REQUEST\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get(\"/api/orders/mine\", {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: MY_ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDER_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get(\"/api/orders\", {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsOrder = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n      payload: orderId\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get(\"/api/orders/\" + orderId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n      payload: paymentResult\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.put(\"/api/orders/\" + order._id + \"/pay\", paymentResult, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteOrder = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELETE_REQUEST,\n      payload: orderId\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.delete(\"/api/orders/\" + orderId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { createOrder, detailsOrder, payOrder, listMyOrders, listOrders, deleteOrder };","map":{"version":3,"names":["Axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","MY_ORDER_LIST_REQUEST","MY_ORDER_LIST_SUCCESS","MY_ORDER_LIST_FAIL","ORDER_DELETE_REQUEST","ORDER_DELETE_SUCCESS","ORDER_DELETE_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","newOrder","post","headers","Authorization","token","error","message","listMyOrders","get","listOrders","detailsOrder","orderId","payOrder","paymentResult","put","_id","deleteOrder","delete"],"sources":["C:/Users/DELL/Desktop/projet stage/frontend/src/actions/orderActions.js"],"sourcesContent":["import Axios from \"axios\";\r\nimport {\r\n  ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, MY_ORDER_LIST_REQUEST, MY_ORDER_LIST_SUCCESS, MY_ORDER_LIST_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL\r\n} from \"../constants/orderConstants\";\r\n\r\nconst createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\r\n    const { userSignin: { userInfo } } = getState();\r\n    const { data: { data: newOrder } } = await Axios.post(\"/api/orders\", order, {\r\n      headers: {\r\n        Authorization: ' Bearer ' + userInfo.token\r\n      }\r\n    });\r\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: newOrder });\r\n  } catch (error) {\r\n    dispatch({ type: ORDER_CREATE_FAIL, payload: error.message });\r\n  }\r\n}\r\n\r\nconst listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: MY_ORDER_LIST_REQUEST });\r\n    const { userSignin: { userInfo } } = getState();\r\n    const { data } = await Axios.get(\"/api/orders/mine\", {\r\n      headers:\r\n        { Authorization: 'Bearer ' + userInfo.token }\r\n    });\r\n    dispatch({ type: MY_ORDER_LIST_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({ type: MY_ORDER_LIST_FAIL, payload: error.message });\r\n  }\r\n}\r\n\r\nconst listOrders = () => async (dispatch, getState) => {\r\n\r\n  try {\r\n    dispatch({ type: ORDER_LIST_REQUEST });\r\n    const { userSignin: { userInfo } } = getState();\r\n    const { data } = await Axios.get(\"/api/orders\", {\r\n      headers:\r\n        { Authorization: 'Bearer ' + userInfo.token }\r\n    });\r\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({ type: ORDER_LIST_FAIL, payload: error.message });\r\n  }\r\n}\r\n\r\nconst detailsOrder = (orderId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\r\n    const { userSignin: { userInfo } } = getState();\r\n    const { data } = await Axios.get(\"/api/orders/\" + orderId, {\r\n      headers:\r\n        { Authorization: 'Bearer ' + userInfo.token }\r\n    });\r\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({ type: ORDER_DETAILS_FAIL, payload: error.message });\r\n  }\r\n}\r\n\r\nconst payOrder = (order, paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_PAY_REQUEST, payload: paymentResult });\r\n    const { userSignin: { userInfo } } = getState();\r\n    const { data } = await Axios.put(\"/api/orders/\" + order._id + \"/pay\", paymentResult, {\r\n      headers:\r\n        { Authorization: 'Bearer ' + userInfo.token }\r\n    });\r\n    dispatch({ type: ORDER_PAY_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({ type: ORDER_PAY_FAIL, payload: error.message });\r\n  }\r\n}\r\n\r\nconst deleteOrder = (orderId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId });\r\n    const { userSignin: { userInfo } } = getState();\r\n    const { data } = await Axios.delete(\"/api/orders/\" + orderId, {\r\n      headers:\r\n        { Authorization: 'Bearer ' + userInfo.token }\r\n    });\r\n    dispatch({ type: ORDER_DELETE_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({ type: ORDER_DELETE_FAIL, payload: error.message });\r\n  }\r\n}\r\nexport { createOrder, detailsOrder, payOrder, listMyOrders, listOrders, deleteOrder };"],"mappings":"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"},"metadata":{},"sourceType":"module"}